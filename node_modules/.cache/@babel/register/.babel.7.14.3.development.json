{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/destiny/code/simple__node/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/destiny/code/simple__node\",\"filename\":\"/home/destiny/code/simple__node/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/destiny/code/simple__node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/destiny/code/simple__node/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/destiny/code/simple__node",
      "filename": "/home/destiny/code/simple__node/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/destiny/code/simple__node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/destiny/code/simple__node/app.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/destiny/code/simple__node/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/destiny/code/simple__node/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _methodOverride = _interopRequireDefault(require(\"method-override\"));\n\nvar _expoServerSdk = require(\"expo-server-sdk\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\nvar expo = new _expoServerSdk.Expo(); //Notifications\n\nvar port = process.env.PORT || 3000; //const server = http.createServer(app)\n\napp.use(_express[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_express[\"default\"].json());\napp.use((0, _methodOverride[\"default\"])());\n\nvar router = _express[\"default\"].Router();\n\nrouter.get('/', function (req, res) {\n  res.send(\"Hello World!\");\n});\nrouter.post('/', function (req, res) {\n  var pushToken = req.body.token;\n  var messages = [];\n  console.log(pushToken); // Each push token looks like ExponentPushToken[xxxxxxxxxxxxxxxxxxxxxx]\n  // Check that all your push tokens appear to be valid Expo push tokens\n\n  if (!_expoServerSdk.Expo.isExpoPushToken(pushToken)) {\n    console.log(!_expoServerSdk.Expo.isExpoPushToken(pushToken)); //console.error(`Push token ${pushToken} is not a valid Expo push token`);\n\n    res.send(\"Push token \".concat(pushToken, \" is not a valid Expo push token\"));\n  } // Construct a message (see https://docs.expo.io/push-notifications/sending-notifications/)\n\n\n  messages.push({\n    to: pushToken,\n    sound: 'default',\n    body: 'This is a test notification',\n    data: {\n      withSome: 'data'\n    },\n    ttl: 2,\n    expiration: 3,\n    priority: 'high',\n    channelId: 'Meseros'\n  });\n  res.send(\"Notification sended\");\n  var chunks = expo.chunkPushNotifications(messages);\n  var tickets = [];\n\n  _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var _iterator, _step, chunk, ticketChunk;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Send the chunks to the Expo push notification service. There are\n            // different strategies you could use. A simple one is to send one chunk at a\n            // time, which nicely spreads the load out over time:\n            _iterator = _createForOfIteratorHelper(chunks);\n            _context.prev = 1;\n\n            _iterator.s();\n\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 18;\n              break;\n            }\n\n            chunk = _step.value;\n            _context.prev = 5;\n            _context.next = 8;\n            return expo.sendPushNotificationsAsync(chunk);\n\n          case 8:\n            ticketChunk = _context.sent;\n            console.log(ticketChunk);\n            tickets.push.apply(tickets, _toConsumableArray(ticketChunk)); // NOTE: If a ticket contains an error code in ticket.details.error, you\n            // must handle it appropriately. The error codes are listed in the Expo\n            // documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            console.error(_context.t0);\n\n          case 16:\n            _context.next = 3;\n            break;\n\n          case 18:\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t1 = _context[\"catch\"](1);\n\n            _iterator.e(_context.t1);\n\n          case 23:\n            _context.prev = 23;\n\n            _iterator.f();\n\n            return _context.finish(23);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 20, 23, 26], [5, 13]]);\n  }))();\n\n  var receiptIds = [];\n\n  for (var _i = 0, _tickets = tickets; _i < _tickets.length; _i++) {\n    var ticket = _tickets[_i];\n\n    // NOTE: Not all tickets have IDs; for example, tickets for notifications\n    // that could not be enqueued will have error information and no receipt ID.\n    if (ticket.id) {\n      receiptIds.push(ticket.id);\n    }\n  }\n\n  var receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n\n  _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var _iterator2, _step2, chunk, receipts, receiptId, _receipts$receiptId, status, message, details;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // Like sending notifications, there are different strategies you could use\n            // to retrieve batches of receipts from the Expo service.\n            _iterator2 = _createForOfIteratorHelper(receiptIdChunks);\n            _context2.prev = 1;\n\n            _iterator2.s();\n\n          case 3:\n            if ((_step2 = _iterator2.n()).done) {\n              _context2.next = 28;\n              break;\n            }\n\n            chunk = _step2.value;\n            _context2.prev = 5;\n            _context2.next = 8;\n            return expo.getPushNotificationReceiptsAsync(chunk);\n\n          case 8:\n            receipts = _context2.sent;\n            console.log(receipts); // The receipts specify whether Apple or Google successfully received the\n            // notification and information about an error, if one occurred.\n\n            _context2.t0 = regeneratorRuntime.keys(receipts);\n\n          case 11:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 21;\n              break;\n            }\n\n            receiptId = _context2.t1.value;\n            _receipts$receiptId = receipts[receiptId], status = _receipts$receiptId.status, message = _receipts$receiptId.message, details = _receipts$receiptId.details;\n\n            if (!(status === 'ok')) {\n              _context2.next = 18;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 11);\n\n          case 18:\n            if (status === 'error') {\n              console.error(\"There was an error sending a notification: \".concat(message));\n\n              if (details && details.error) {\n                // The error codes are listed in the Expo documentation:\n                // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n                // You must handle the errors appropriately.\n                console.error(\"The error code is \".concat(details.error));\n              }\n            }\n\n          case 19:\n            _context2.next = 11;\n            break;\n\n          case 21:\n            _context2.next = 26;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t2 = _context2[\"catch\"](5);\n            console.error(_context2.t2);\n\n          case 26:\n            _context2.next = 3;\n            break;\n\n          case 28:\n            _context2.next = 33;\n            break;\n\n          case 30:\n            _context2.prev = 30;\n            _context2.t3 = _context2[\"catch\"](1);\n\n            _iterator2.e(_context2.t3);\n\n          case 33:\n            _context2.prev = 33;\n\n            _iterator2.f();\n\n            return _context2.finish(33);\n\n          case 36:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 30, 33, 36], [5, 23]]);\n  }))();\n});\napp.use(router);\napp.listen(port, function () {\n  console.log(\"Node server running on http://localhost:3000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "expo",
        "Expo",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "express",
        "urlencoded",
        "extended",
        "json",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "send",
        "post",
        "pushToken",
        "body",
        "token",
        "messages",
        "console",
        "log",
        "isExpoPushToken",
        "push",
        "to",
        "sound",
        "data",
        "withSome",
        "ttl",
        "expiration",
        "priority",
        "channelId",
        "chunks",
        "chunkPushNotifications",
        "tickets",
        "chunk",
        "sendPushNotificationsAsync",
        "ticketChunk",
        "error",
        "receiptIds",
        "ticket",
        "id",
        "receiptIdChunks",
        "chunkPushNotificationReceiptIds",
        "getPushNotificationReceiptsAsync",
        "receipts",
        "receiptId",
        "status",
        "message",
        "details",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAIC,IAAI,GAAG,IAAIC,mBAAJ,EAAX,C,CAEA;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CACA;;AAEAN,GAAG,CAACO,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAV,GAAG,CAACO,GAAJ,CAAQC,oBAAQG,IAAR,EAAR;AACAX,GAAG,CAACO,GAAJ,CAAQ,iCAAR;;AAEA,IAAMK,MAAM,GAAGJ,oBAAQK,MAAR,EAAf;;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACjCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT;AACD,CAFD;AAIAL,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,UAAUH,GAAV,EAAeC,GAAf,EAAoB;AACnC,MAAMG,SAAS,GAAGJ,GAAG,CAACK,IAAJ,CAASC,KAA3B;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AAEEC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EALiC,CAMjC;AAEA;;AACA,MAAI,CAACjB,oBAAKuB,eAAL,CAAqBN,SAArB,CAAL,EAAsC;AACpCI,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACtB,oBAAKuB,eAAL,CAAqBN,SAArB,CAAb,EADoC,CAEpC;;AACAH,IAAAA,GAAG,CAACC,IAAJ,sBAAuBE,SAAvB;AACD,GAbgC,CAejC;;;AACAG,EAAAA,QAAQ,CAACI,IAAT,CAAc;AACZC,IAAAA,EAAE,EAAER,SADQ;AAEZS,IAAAA,KAAK,EAAE,SAFK;AAGZR,IAAAA,IAAI,EAAE,6BAHM;AAIZS,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAJM;AAKZC,IAAAA,GAAG,EAAE,CALO;AAMZC,IAAAA,UAAU,EAAE,CANA;AAOZC,IAAAA,QAAQ,EAAE,MAPE;AAQZC,IAAAA,SAAS,EAAE;AARC,GAAd;AAUFlB,EAAAA,GAAG,CAACC,IAAJ;AAEA,MAAIkB,MAAM,GAAGlC,IAAI,CAACmC,sBAAL,CAA4Bd,QAA5B,CAAb;AACA,MAAIe,OAAO,GAAG,EAAd;;AACA,0DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACC;AACA;AACA;AAHD,mDAImBF,MAJnB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIUG,YAAAA,KAJV;AAAA;AAAA;AAAA,mBAM6BrC,IAAI,CAACsC,0BAAL,CAAgCD,KAAhC,CAN7B;;AAAA;AAMSE,YAAAA,WANT;AAOKjB,YAAAA,OAAO,CAACC,GAAR,CAAYgB,WAAZ;AACAH,YAAAA,OAAO,CAACX,IAAR,OAAAW,OAAO,qBAASG,WAAT,EAAP,CARL,CASK;AACA;AACA;AACA;;AAZL;AAAA;;AAAA;AAAA;AAAA;AAcKjB,YAAAA,OAAO,CAACkB,KAAR;;AAdL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAmBA,MAAIC,UAAU,GAAG,EAAjB;;AACF,8BAAmBL,OAAnB,8BAA4B;AAAvB,QAAIM,MAAM,eAAV;;AACH;AACA;AACA,QAAIA,MAAM,CAACC,EAAX,EAAe;AACbF,MAAAA,UAAU,CAAChB,IAAX,CAAgBiB,MAAM,CAACC,EAAvB;AACD;AACF;;AAED,MAAIC,eAAe,GAAG5C,IAAI,CAAC6C,+BAAL,CAAqCJ,UAArC,CAAtB;;AACA,0DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACC;AACA;AAFD,oDAGmBG,eAHnB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGUP,YAAAA,KAHV;AAAA;AAAA;AAAA,mBAK0BrC,IAAI,CAAC8C,gCAAL,CAAsCT,KAAtC,CAL1B;;AAAA;AAKSU,YAAAA,QALT;AAMKzB,YAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ,EANL,CAQK;AACA;;AATL,mDAU2BA,QAV3B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUcC,YAAAA,SAVd;AAAA,kCAW0CD,QAAQ,CAACC,SAAD,CAXlD,EAWaC,MAXb,uBAWaA,MAXb,EAWqBC,OAXrB,uBAWqBA,OAXrB,EAW8BC,OAX9B,uBAW8BA,OAX9B;;AAAA,kBAYWF,MAAM,KAAK,IAZtB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAcc,gBAAIA,MAAM,KAAK,OAAf,EAAwB;AAC7B3B,cAAAA,OAAO,CAACkB,KAAR,sDACgDU,OADhD;;AAGA,kBAAIC,OAAO,IAAIA,OAAO,CAACX,KAAvB,EAA8B;AAC5B;AACA;AACA;AACAlB,gBAAAA,OAAO,CAACkB,KAAR,6BAAmCW,OAAO,CAACX,KAA3C;AACD;AACF;;AAxBR;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BKlB,YAAAA,OAAO,CAACkB,KAAR;;AA3BL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAgCC,CA3FD;AA8FAzC,GAAG,CAACO,GAAJ,CAAQK,MAAR;AAEAZ,GAAG,CAACqD,MAAJ,CAAWlD,IAAX,EAAiB,YAAW;AAC1BoB,EAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACD,CAFD",
      "sourceRoot": "/home/destiny/code/simple__node/",
      "sourcesContent": [
        "import express from 'express'\nimport http from 'http'\nimport methodOverride from 'method-override'\nimport { Expo } from 'expo-server-sdk'\n\nconst app = express()\nlet expo = new Expo();\n\n//Notifications\n\nconst port = process.env.PORT || 3000\n//const server = http.createServer(app)\n\napp.use(express.urlencoded({ extended: false }));\napp.use(express.json());\napp.use(methodOverride());\n\nconst router = express.Router();\n\nrouter.get('/', function(req, res) {\n  res.send(\"Hello World!\");\n});\n\nrouter.post('/', function (req, res) {\n  const pushToken = req.body.token;\n  \n  const messages = [];\n \n    console.log(pushToken)\n    // Each push token looks like ExponentPushToken[xxxxxxxxxxxxxxxxxxxxxx]\n    \n    // Check that all your push tokens appear to be valid Expo push tokens\n    if (!Expo.isExpoPushToken(pushToken)) {\n      console.log(!Expo.isExpoPushToken(pushToken))\n      //console.error(`Push token ${pushToken} is not a valid Expo push token`);\n      res.send(`Push token ${pushToken} is not a valid Expo push token`);\n    }\n  \n    // Construct a message (see https://docs.expo.io/push-notifications/sending-notifications/)\n    messages.push({\n      to: pushToken,\n      sound: 'default',\n      body: 'This is a test notification',\n      data: { withSome: 'data' },\n      ttl: 2,\n      expiration: 3,\n      priority: 'high',\n      channelId: 'Meseros'\n    });\n  res.send(`Notification sended`);\n\n  let chunks = expo.chunkPushNotifications(messages);\n  let tickets = [];\n  (async () => {\n    // Send the chunks to the Expo push notification service. There are\n    // different strategies you could use. A simple one is to send one chunk at a\n    // time, which nicely spreads the load out over time:\n    for (let chunk of chunks) {\n      try {\n        let ticketChunk = await expo.sendPushNotificationsAsync(chunk);\n        console.log(ticketChunk);\n        tickets.push(...ticketChunk);\n        // NOTE: If a ticket contains an error code in ticket.details.error, you\n        // must handle it appropriately. The error codes are listed in the Expo\n        // documentation:\n        // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  })();\n\n  let receiptIds = [];\nfor (let ticket of tickets) {\n  // NOTE: Not all tickets have IDs; for example, tickets for notifications\n  // that could not be enqueued will have error information and no receipt ID.\n  if (ticket.id) {\n    receiptIds.push(ticket.id);\n  }\n}\n\nlet receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n(async () => {\n  // Like sending notifications, there are different strategies you could use\n  // to retrieve batches of receipts from the Expo service.\n  for (let chunk of receiptIdChunks) {\n    try {\n      let receipts = await expo.getPushNotificationReceiptsAsync(chunk);\n      console.log(receipts);\n\n      // The receipts specify whether Apple or Google successfully received the\n      // notification and information about an error, if one occurred.\n      for (let receiptId in receipts) {\n        let { status, message, details } = receipts[receiptId];\n        if (status === 'ok') {\n          continue;\n        } else if (status === 'error') {\n          console.error(\n            `There was an error sending a notification: ${message}`\n          );\n          if (details && details.error) {\n            // The error codes are listed in the Expo documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n            // You must handle the errors appropriately.\n            console.error(`The error code is ${details.error}`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n})();\n\n});\n\n\napp.use(router);\n\napp.listen(port, function() {\n  console.log(\"Node server running on http://localhost:3000\");\n});\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622571243649
  }
}